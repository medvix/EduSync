{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\peter\\\\OneDrive\\\\idk\\\\Dokumenty\\\\Multimedia\\\\src\\\\components\\\\MainPageComponents\\\\Second\\\\PopUpContent\\\\PopUpContent.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './PopUpContent.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PopUpContent = () => {\n  _s();\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const [selectedOption, setSelectedOption] = useState(null);\n\n  // Define your theorySlides, practicalSlides, and conclusionSlide here\n  const slides = [...theorySlides, ...practicalSlides, conclusionSlide];\n  const handleOptionSelect = option => {\n    setSelectedOption(option);\n  };\n  const goToNextSlide = () => {\n    setCurrentSlide(currentSlide + 1);\n    setSelectedOption(null);\n  };\n  const goToPreviousSlide = () => {\n    setCurrentSlide(currentSlide - 1);\n    setSelectedOption(null);\n  };\n  const handleMultipleChoiceSelection = (question, option) => {\n    // Handle selection logic\n  };\n  const renderMultipleChoiceQuestions = exercise => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: exercise.questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: question.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this), question.options.map((option, optIndex) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleMultipleChoiceSelection(question.question, option),\n          children: option\n        }, optIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }, this))]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this);\n  };\n  const renderDragAndDropExercise = exercise => {\n    // Simplified version; for full implementation consider using react-dnd\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: exercise.items.map((item, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Drag \", item.option, \" to \", item.targets.join(\", \")]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this)\n      // Implement drag and drop functionality here\n      )\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this);\n  };\n  const renderMatchingExercise = exercise => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: exercise.pairs.map((pair, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: pair.left\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this), \" matches with \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: pair.right\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 63\n        }, this), \"// Implement matching functionality here\"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this);\n  };\n  const renderExerciseContent = exercise => {\n    switch (exercise.type) {\n      case 'multiple-choice':\n        return renderMultipleChoiceQuestions(exercise);\n      case 'drag-and-drop':\n        return renderDragAndDropExercise(exercise);\n      case 'matching':\n        return renderMatchingExercise(exercise);\n      default:\n        return null;\n    }\n  };\n  const renderSlideContent = () => {\n    const slide = slides[currentSlide];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: slide.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), slide.type === 'Practical' && renderExerciseContent(slide.exercise)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popup-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: slides[currentSlide].title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), renderSlideContent(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navigation-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: goToPreviousSlide,\n        disabled: currentSlide === 0,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: goToNextSlide,\n        disabled: currentSlide === slides.length - 1,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 9\n  }, this);\n};\n_s(PopUpContent, \"h9K25Yj9PtQXogFMfYxiDKhRMfE=\");\n_c = PopUpContent;\nexport default PopUpContent;\nvar _c;\n$RefreshReg$(_c, \"PopUpContent\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PopUpContent","_s","currentSlide","setCurrentSlide","selectedOption","setSelectedOption","slides","theorySlides","practicalSlides","conclusionSlide","handleOptionSelect","option","goToNextSlide","goToPreviousSlide","handleMultipleChoiceSelection","question","renderMultipleChoiceQuestions","exercise","children","questions","map","index","fileName","_jsxFileName","lineNumber","columnNumber","options","optIndex","onClick","renderDragAndDropExercise","items","item","targets","join","renderMatchingExercise","pairs","pair","left","right","renderExerciseContent","type","renderSlideContent","slide","content","className","title","disabled","length","_c","$RefreshReg$"],"sources":["C:/Users/peter/OneDrive/idk/Dokumenty/Multimedia/src/components/MainPageComponents/Second/PopUpContent/PopUpContent.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './PopUpContent.scss';\r\n\r\ninterface TheorySlide {\r\n    type: \"Theory\";\r\n    title: string;\r\n    content: string;\r\n}\r\n\r\ninterface PracticalSlide {\r\n    type: \"Practical\";\r\n    title: string;\r\n    content: string;\r\n    exercise: any; // Define a more specific type for your exercises\r\n}\r\n\r\ninterface ConclusionSlide {\r\n    type: \"Conclusion\";\r\n    title: string;\r\n    content: string;\r\n}\r\n\r\ntype Slide = TheorySlide | PracticalSlide | ConclusionSlide;\r\n\r\nconst PopUpContent = () => {\r\n    const [currentSlide, setCurrentSlide] = useState<number>(0);\r\n    const [selectedOption, setSelectedOption] = useState<string | null>(null);\r\n\r\n    // Define your theorySlides, practicalSlides, and conclusionSlide here\r\n    const slides = [...theorySlides, ...practicalSlides, conclusionSlide];\r\n\r\n\r\n\r\n    const handleOptionSelect = (option: string) => {\r\n        setSelectedOption(option);\r\n    };\r\n\r\n    const goToNextSlide = () => {\r\n        setCurrentSlide(currentSlide + 1);\r\n        setSelectedOption(null);\r\n    };\r\n\r\n    const goToPreviousSlide = () => {\r\n        setCurrentSlide(currentSlide - 1);\r\n        setSelectedOption(null);\r\n    };\r\n\r\n    const handleMultipleChoiceSelection = (question: string, option: string) => {\r\n        // Handle selection logic\r\n    };\r\n\r\n    const renderMultipleChoiceQuestions = (exercise: any) => {\r\n        return (\r\n            <div>\r\n                {exercise.questions.map((question: any, index: number) => (\r\n                    <div key={index}>\r\n                        <p>{question.question}</p>\r\n                        {question.options.map((option: string, optIndex: number) => (\r\n                            <button key={optIndex} onClick={() => handleMultipleChoiceSelection(question.question, option)}>\r\n                                {option}\r\n                            </button>\r\n                        ))}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const renderDragAndDropExercise = (exercise: any) => {\r\n        // Simplified version; for full implementation consider using react-dnd\r\n        return (\r\n            <div>\r\n                {exercise.items.map((item: any, index: number) => (\r\n                    <p key={index}>Drag {item.option} to {item.targets.join(\", \")}</p>\r\n                    // Implement drag and drop functionality here\r\n                ))}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const renderMatchingExercise = (exercise: any) => {\r\n        return (\r\n            <div>\r\n                {exercise.pairs.map((pair: any, index: number) => (\r\n                    <div key={index}>\r\n                        <span>{pair.left}</span> matches with <span>{pair.right}</span>\r\n                        // Implement matching functionality here\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const renderExerciseContent = (exercise: any) => {\r\n        switch (exercise.type) {\r\n            case 'multiple-choice':\r\n                return renderMultipleChoiceQuestions(exercise);\r\n            case 'drag-and-drop':\r\n                return renderDragAndDropExercise(exercise);\r\n            case 'matching':\r\n                return renderMatchingExercise(exercise);\r\n            default:\r\n                return null;\r\n        }\r\n    };\r\n\r\n    const renderSlideContent = () => {\r\n        const slide = slides[currentSlide];\r\n\r\n        return (\r\n            <div>\r\n                <p>{slide.content}</p>\r\n                {slide.type === 'Practical' && renderExerciseContent(slide.exercise)}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"popup-content\">\r\n            <h2>{slides[currentSlide].title}</h2>\r\n            {renderSlideContent()}\r\n            <div className=\"navigation-buttons\">\r\n                <button onClick={goToPreviousSlide} disabled={currentSlide === 0}>Previous</button>\r\n                <button onClick={goToNextSlide} disabled={currentSlide === slides.length - 1}>Next</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PopUpContent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}