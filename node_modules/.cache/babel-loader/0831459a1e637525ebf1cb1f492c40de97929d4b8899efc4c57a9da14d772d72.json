{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\peter\\\\OneDrive\\\\idk\\\\Dokumenty\\\\Multimedia\\\\src\\\\components\\\\Game\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialData = {\n  questions: [{\n    id: 'question-1',\n    content: 'Kedy vznikol photoshop:',\n    answer: ''\n  }\n  // add more questions as needed\n  ],\n\n  options: ['1990', '1988', '2000'] // answer options\n};\n\nfunction App() {\n  _s();\n  const [data, setData] = useState(initialData);\n  const onDragEnd = result => {\n    if (!result.destination) return;\n    const {\n      source,\n      destination\n    } = result;\n\n    // Update the state based on the drag and drop result\n    if (destination.droppableId === 'options') {\n      const newOptions = Array.from(data.options);\n      const [removed] = newOptions.splice(source.index, 1);\n\n      // If an option was removed, update the questions and options in the state\n      if (removed) {\n        const newQuestions = Array.from(data.questions);\n        newQuestions.forEach(q => {\n          if (q.answer === removed) {\n            q.answer = '';\n          }\n        });\n        setData({\n          questions: newQuestions,\n          options: newOptions\n        });\n      }\n    } else {\n      const newQuestions = Array.from(data.questions);\n      const questionIndex = Number(destination.droppableId);\n      const selectedOption = data.options[source.index];\n\n      // If the question already has an answer, return the previous answer to options\n      if (newQuestions[questionIndex].answer) {\n        newOptions.push(newQuestions[questionIndex].answer);\n      }\n\n      // Update the question with the selected answer\n      newQuestions[questionIndex].answer = selectedOption;\n      setData({\n        questions: newQuestions,\n        options: data.options\n      });\n    }\n  };\n  const checkAnswers = () => {\n    // Check if all answers are correct\n    const isCorrect = data.questions.every(q => q.answer === '1988');\n    alert(isCorrect ? 'Odpovedali ste správne!' : 'Skúste to znova.');\n  };\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: onDragEnd,\n    children: [data.questions.map((q, i) => /*#__PURE__*/_jsxDEV(Droppable, {\n      droppableId: String(i),\n      children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n        ...provided.droppableProps,\n        ref: provided.innerRef,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: q.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 29\n        }, this), q.answer && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: q.answer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 42\n        }, this), provided.placeholder]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }, this)\n    }, q.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(Droppable, {\n      droppableId: \"options\",\n      children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n        ...provided.droppableProps,\n        ref: provided.innerRef,\n        children: [data.options.map((option, i) => /*#__PURE__*/_jsxDEV(Draggable, {\n          draggableId: option,\n          index: i,\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            ...provided.draggableProps,\n            ...provided.dragHandleProps,\n            ref: provided.innerRef,\n            children: option\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 37\n          }, this)\n        }, option, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 29\n        }, this)), provided.placeholder]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: checkAnswers,\n      children: \"Skontrolova\\u0165 odpovede\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"hDGcfQHkZj5ZsEBk8saO8jx9VfY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","DragDropContext","Droppable","Draggable","jsxDEV","_jsxDEV","initialData","questions","id","content","answer","options","App","_s","data","setData","onDragEnd","result","destination","source","droppableId","newOptions","Array","from","removed","splice","index","newQuestions","forEach","q","questionIndex","Number","selectedOption","push","checkAnswers","isCorrect","every","alert","children","map","i","String","provided","droppableProps","ref","innerRef","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","option","draggableId","draggableProps","dragHandleProps","onClick","_c","$RefreshReg$"],"sources":["C:/Users/peter/OneDrive/idk/Dokumenty/Multimedia/src/components/Game/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { DragDropContext, Droppable, Draggable, DropResult } from 'react-beautiful-dnd';\r\n\r\nconst initialData = {\r\n    questions: [\r\n        { id: 'question-1', content: 'Kedy vznikol photoshop:', answer: '' },\r\n        // add more questions as needed\r\n    ],\r\n    options: ['1990', '1988', '2000'], // answer options\r\n};\r\n\r\nfunction App() {\r\n    const [data, setData] = useState(initialData);\r\n\r\n    const onDragEnd = (result: DropResult) => {\r\n        if (!result.destination) return;\r\n\r\n        const { source, destination } = result;\r\n\r\n        // Update the state based on the drag and drop result\r\n        if (destination.droppableId === 'options') {\r\n            const newOptions = Array.from(data.options);\r\n            const [removed] = newOptions.splice(source.index, 1);\r\n\r\n            // If an option was removed, update the questions and options in the state\r\n            if (removed) {\r\n                const newQuestions = Array.from(data.questions);\r\n                newQuestions.forEach((q) => {\r\n                    if (q.answer === removed) {\r\n                        q.answer = '';\r\n                    }\r\n                });\r\n\r\n                setData({ questions: newQuestions, options: newOptions });\r\n            }\r\n        } else {\r\n            const newQuestions = Array.from(data.questions);\r\n            const questionIndex = Number(destination.droppableId);\r\n            const selectedOption = data.options[source.index];\r\n\r\n            // If the question already has an answer, return the previous answer to options\r\n            if (newQuestions[questionIndex].answer) {\r\n                newOptions.push(newQuestions[questionIndex].answer);\r\n            }\r\n\r\n            // Update the question with the selected answer\r\n            newQuestions[questionIndex].answer = selectedOption;\r\n\r\n            setData({ questions: newQuestions, options: data.options });\r\n        }\r\n    };\r\n\r\n    const checkAnswers = () => {\r\n        // Check if all answers are correct\r\n        const isCorrect = data.questions.every((q) => q.answer === '1988');\r\n        alert(isCorrect ? 'Odpovedali ste správne!' : 'Skúste to znova.');\r\n    };\r\n\r\n    return (\r\n        <DragDropContext onDragEnd={onDragEnd}>\r\n            {data.questions.map((q, i) => (\r\n                <Droppable key={q.id} droppableId={String(i)}>\r\n                    {(provided) => (\r\n                        <div {...provided.droppableProps} ref={provided.innerRef}>\r\n                            <span>{q.content}</span>\r\n                            {q.answer && <div>{q.answer}</div>}\r\n                            {provided.placeholder}\r\n                        </div>\r\n                    )}\r\n                </Droppable>\r\n            ))}\r\n            <Droppable droppableId=\"options\">\r\n                {(provided) => (\r\n                    <div {...provided.droppableProps} ref={provided.innerRef}>\r\n                        {data.options.map((option, i) => (\r\n                            <Draggable key={option} draggableId={option} index={i}>\r\n                                {(provided) => (\r\n                                    <div\r\n                                        {...provided.draggableProps}\r\n                                        {...provided.dragHandleProps}\r\n                                        ref={provided.innerRef}\r\n                                    >\r\n                                        {option}\r\n                                    </div>\r\n                                )}\r\n                            </Draggable>\r\n                        ))}\r\n                        {provided.placeholder}\r\n                    </div>\r\n                )}\r\n            </Droppable>\r\n            <button onClick={checkAnswers}>Skontrolovať odpovede</button>\r\n        </DragDropContext>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}