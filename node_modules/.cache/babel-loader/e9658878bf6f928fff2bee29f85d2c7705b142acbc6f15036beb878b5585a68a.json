{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\peter\\\\OneDrive\\\\idk\\\\Dokumenty\\\\Multimedia\\\\src\\\\components\\\\MainPageComponents\\\\Second\\\\PopUpContent\\\\PopUpContent.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './PopUpContent.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PopUpContent = () => {\n  _s();\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [selectedAnswers, setSelectedAnswers] = useState({});\n  const [draggedItem, setDraggedItem] = useState(null);\n  const [filledBlanks, setFilledBlanks] = useState({});\n  const [checkResult, setCheckResult] = useState(null);\n  const [selectedLeft, setSelectedLeft] = useState(null);\n  const [selectedPairs, setSelectedPairs] = useState({});\n  const [resultMessage, setResultMessage] = useState('');\n  const theorySlides = [{\n    type: \"Theory\",\n    title: \"Komplexný Úvod do Webhostingu\",\n    content: \"Poznajte rôzne typy webhostingových služieb - zdieľaný hosting, VPS, cloud hosting a ich výhody/nevýhody. Prehľad funkcií webhostingu, ako sú serverové operačné systémy, databázy, ukladacie priestory, šírka pásma a bezpečnostné protokoly. Základy doménových mien a DNS.\"\n  }, {\n    type: \"Theory\",\n    title: \"Hĺbkový Pohľad na HTML a PHP\",\n    content: \"Detailný prehľad HTML5 - základné štruktúry, formulárové prvky, nové semantickejšie značky, responzívny dizajn s HTML. PHP - serverové skriptovanie, základy syntaxe, premenné, funkcie, práca s databázami (napr. MySQL), zabezpečenie PHP skriptov, integrovanie s HTML a CSS.\"\n  }, {\n    type: \"Theory\",\n    title: \"Princípy Vektorového Designu a Tvorby Loga\",\n    content: \"Základy vektorovej grafiky - rozlíšenie medzi vektormi a rastrovými obrázkami, výhody vektorových grafík. Softvérové nástroje pre vektorový design (Adobe Illustrator, CorelDraw, Inkscape). Kľúčové princípy návrhu loga - jednoduchosť, rozpoznateľnosť, farby, typografia. Postup návrhu loga od konceptu k realizácii.\"\n  }, {\n    type: \"Theory\",\n    title: \"Návrh a Použitie Vlastných Fontov na Webstránke\",\n    content: \"Proces návrhu fontov - od nápadu, skicovania, digitálneho prototypovania až po finalizáciu. Prehľad softvéru pre návrh fontov (napr. FontForge, Glyphs). Typografické princípy pre web - výber a kombinovanie fontov, čitateľnosť, konzistentnosť. Technické aspekty implementácie custom fontov v CSS, súvisiace s @font-face, formátmi fontov a webovou kompatibilitou.\"\n  }];\n  const practicalSlides = [{\n    type: \"Practical\",\n    title: \"Kvíz o Základoch Webhostingu a HTML/PHP\",\n    content: \"Overte si svoje vedomosti o nastavení webhostingu a tvorbe základných HTML/PHP stránok.\",\n    exercise: {\n      type: \"multiple-choice\",\n      questions: [{\n        question: \"Ktorý tag v HTML slúži na vloženie PHP skriptu?\",\n        options: [\"<php>\", \"<script>\", \"<?php>\"],\n        correctAnswer: \"<?php>\"\n      }, {\n        question: \"Aká je hlavná funkcia webhostingu?\",\n        options: [\"Uloženie dát\", \"Spracovanie PHP\", \"Vytváranie dizajnu\"],\n        correctAnswer: \"Uloženie dát\"\n      }\n      // Pridajte ďalšie otázky\n      ]\n    }\n  }, {\n    type: \"Practical\",\n    title: \"Návrh Vlastného Vektorového Loga\",\n    content: \"Navrhnite a implementujte svoje vlastné vektorové logo na webstránku.\",\n    exercise: {\n      type: \"interactive\",\n      instructions: \"Pomocou vektorového grafického editora vytvorte logo pre váš projekt a následne ho vložte do hlavičky vašej HTML stránky.\"\n    }\n  }, {\n    type: \"Practical\",\n    title: \"Tvorba a Aplikácia Vlastného Fontu na Webstránke\",\n    content: \"Navrhnite si vlastný font a aplikujte ho na vašu webstránku.\",\n    exercise: {\n      type: \"interactive\",\n      instructions: \"Pomocou nástroja na návrh fontov vytvorte vlastný font. Potom vložte font do CSS vašej webstránky a aplikujte ho na text.\"\n    }\n  }];\n  const conclusionSlide = {\n    type: \"Conclusion\",\n    title: \"Summary of Key Concepts\",\n    content: \"Recap of the key points covered in the course, emphasizing the importance of storytelling, technical skills, and creativity in video editing.\"\n  };\n  const slides = [...theorySlides, ...practicalSlides, conclusionSlide];\n  const goToNextSlide = () => {\n    setCurrentSlide(currentSlide + 1);\n    setSelectedOption(null);\n  };\n  const goToPreviousSlide = () => {\n    setCurrentSlide(currentSlide - 1);\n    setSelectedOption(null);\n  };\n  const handleMultipleChoiceSelection = (question, option) => {\n    setSelectedAnswers(prev => ({\n      ...prev,\n      [question]: option\n    }));\n  };\n  const isAnswerCorrect = (question, option) => {\n    const currentExercise = slides[currentSlide].exercise;\n    if (currentExercise.type === \"multiple-choice\") {\n      const correctAnswer = currentExercise.questions.find(q => q.question === question).correctAnswer;\n      return option === correctAnswer;\n    }\n    return false;\n  };\n  const renderMultipleChoiceQuestions = exercise => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: exercise.questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quiz-question\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: question.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 25\n        }, this), question.options.map((option, optIndex) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleMultipleChoiceSelection(question.question, option),\n          className: selectedAnswers[question.question] === option ? 'selected' : '',\n          children: option\n        }, optIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 29\n        }, this)), selectedAnswers[question.question] && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: isAnswerCorrect(question.question, selectedAnswers[question.question]) ? 'correct' : 'incorrect',\n          children: isAnswerCorrect(question.question, selectedAnswers[question.question]) ? 'Correct answer!' : 'Incorrect answer.'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this);\n  };\n  const handleDragStart = (item, fromBlank = false) => {\n    if (fromBlank) {\n      // If dragging from a blank, remove the item from the blank\n      const updatedBlanks = {\n        ...filledBlanks\n      };\n      for (const key in updatedBlanks) {\n        if (updatedBlanks[key] === item) {\n          updatedBlanks[key] = \"____\"; // Reset the blank\n          break;\n        }\n      }\n      setFilledBlanks(updatedBlanks);\n    }\n    setDraggedItem(item);\n  };\n  const handleDrop = blankIndex => {\n    if (draggedItem) {\n      const blankKey = `blank${blankIndex + 1}`; // Adjust index to match key structure\n      setFilledBlanks(prev => ({\n        ...prev,\n        [blankKey]: draggedItem\n      }));\n      setDraggedItem(null);\n    }\n  };\n  const checkAnswers = () => {\n    const currentSlideData = slides[currentSlide];\n    if (currentSlideData.type === \"Practical\" && currentSlideData.exercise.type === \"drag-and-drop\") {\n      let allCorrect = true;\n      const {\n        blanks\n      } = currentSlideData.exercise;\n      for (const blankKey in blanks) {\n        if (!Object.values(filledBlanks).includes(blanks[blankKey])) {\n          allCorrect = false;\n          break;\n        }\n      }\n      setCheckResult(allCorrect ? \"All answers are correct!\" : \"Some answers are incorrect.\");\n    }\n  };\n  const renderDragAndDropExercise = exercise => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"exercise-text\",\n        children: exercise.text.map((part, index) => part === \"____\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"blank\",\n          onDrop: () => handleDrop(index),\n          onDragOver: e => e.preventDefault(),\n          draggable: true,\n          onDragStart: () => handleDragStart(filledBlanks[`blank${index + 1}`], true),\n          children: filledBlanks[`blank${index + 1}`] || part\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: part\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options\",\n        children: exercise.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"draggable-option\",\n          draggable: true,\n          onDragStart: () => handleDragStart(option),\n          children: option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: checkAnswers,\n        className: \"check-answers-btn\",\n        children: \"Check Answers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 17\n      }, this), checkResult && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `check-result ${checkResult === \"All answers are correct!\" ? 'correct' : 'incorrect'}`,\n        children: checkResult\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }, this);\n  };\n  const renderExerciseContent = exercise => {\n    switch (exercise.type) {\n      case 'multiple-choice':\n        return renderMultipleChoiceQuestions(exercise);\n      case 'drag-and-drop':\n        return renderDragAndDropExercise(exercise);\n      default:\n        return null;\n    }\n  };\n  const renderSlideContent = () => {\n    const slide = slides[currentSlide];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: slide.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 17\n      }, this), slide.type === 'Practical' && renderExerciseContent(slide.exercise)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 13\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popup-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: slides[currentSlide].title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 13\n    }, this), renderSlideContent(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navigation-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: goToPreviousSlide,\n        disabled: currentSlide === 0,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: goToNextSlide,\n        disabled: currentSlide === slides.length - 1,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 302,\n    columnNumber: 9\n  }, this);\n};\n_s(PopUpContent, \"8OUH1qKtBNgpcRb2+fzsU3eUjhw=\");\n_c = PopUpContent;\nexport default PopUpContent;\nvar _c;\n$RefreshReg$(_c, \"PopUpContent\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PopUpContent","_s","currentSlide","setCurrentSlide","selectedOption","setSelectedOption","selectedAnswers","setSelectedAnswers","draggedItem","setDraggedItem","filledBlanks","setFilledBlanks","checkResult","setCheckResult","selectedLeft","setSelectedLeft","selectedPairs","setSelectedPairs","resultMessage","setResultMessage","theorySlides","type","title","content","practicalSlides","exercise","questions","question","options","correctAnswer","instructions","conclusionSlide","slides","goToNextSlide","goToPreviousSlide","handleMultipleChoiceSelection","option","prev","isAnswerCorrect","currentExercise","find","q","renderMultipleChoiceQuestions","children","map","index","className","fileName","_jsxFileName","lineNumber","columnNumber","optIndex","onClick","handleDragStart","item","fromBlank","updatedBlanks","key","handleDrop","blankIndex","blankKey","checkAnswers","currentSlideData","allCorrect","blanks","Object","values","includes","renderDragAndDropExercise","text","part","onDrop","onDragOver","e","preventDefault","draggable","onDragStart","renderExerciseContent","renderSlideContent","slide","disabled","length","_c","$RefreshReg$"],"sources":["C:/Users/peter/OneDrive/idk/Dokumenty/Multimedia/src/components/MainPageComponents/Second/PopUpContent/PopUpContent.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './PopUpContent.scss';\r\n\r\ninterface TheorySlide {\r\n    type: \"Theory\";\r\n    title: string;\r\n    content: string;\r\n}\r\n\r\ninterface PracticalSlide {\r\n    type: \"Practical\";\r\n    title: string;\r\n    content: string;\r\n    exercise: any; // Define a more specific type for your exercises\r\n}\r\n\r\ninterface ConclusionSlide {\r\n    type: \"Conclusion\";\r\n    title: string;\r\n    content: string;\r\n}\r\n\r\ntype Slide = TheorySlide | PracticalSlide | ConclusionSlide;\r\n\r\ninterface Pair {\r\n    id: string;\r\n    left: string;\r\n    right: string;\r\n    selectedLeft?: boolean;\r\n    selectedRight?: boolean;\r\n}\r\n\r\ninterface Selection {\r\n    [id: string]: { left?: boolean; right?: boolean };\r\n}\r\n\r\ninterface MatchingSelections {\r\n    [key: string]: { left?: boolean; right?: boolean };\r\n}\r\n\r\ninterface Exercise {\r\n    type: string;\r\n    questions?: Question[];\r\n    blanks?: { [key: string]: string };\r\n    pairs?: Pair[];\r\n}\r\n\r\ninterface Question {\r\n    question: string;\r\n    options: string[];\r\n    correctAnswer: string;\r\n}\r\n\r\nconst PopUpContent = () => {\r\n    const [currentSlide, setCurrentSlide] = useState<number>(0);\r\n    const [selectedOption, setSelectedOption] = useState<string | null>(null);\r\n    const [selectedAnswers, setSelectedAnswers] = useState<{ [question: string]: string }>({});\r\n    const [draggedItem, setDraggedItem] = useState<string | null>(null);\r\n    const [filledBlanks, setFilledBlanks] = useState<{ [key: string]: string }>({});\r\n\r\n    const [checkResult, setCheckResult] = useState<string | null>(null);\r\n\r\n    const [selectedLeft, setSelectedLeft] = useState<string | null>(null);\r\n    const [selectedPairs, setSelectedPairs] = useState<{ [leftItem: string]: string }>({});\r\n    const [resultMessage, setResultMessage] = useState<string>('');\r\n\r\n\r\n\r\n\r\n    const theorySlides: TheorySlide[] = [\r\n        {\r\n            type: \"Theory\",\r\n            title: \"Komplexný Úvod do Webhostingu\",\r\n            content: \"Poznajte rôzne typy webhostingových služieb - zdieľaný hosting, VPS, cloud hosting a ich výhody/nevýhody. Prehľad funkcií webhostingu, ako sú serverové operačné systémy, databázy, ukladacie priestory, šírka pásma a bezpečnostné protokoly. Základy doménových mien a DNS.\"\r\n        },\r\n        {\r\n            type: \"Theory\",\r\n            title: \"Hĺbkový Pohľad na HTML a PHP\",\r\n            content: \"Detailný prehľad HTML5 - základné štruktúry, formulárové prvky, nové semantickejšie značky, responzívny dizajn s HTML. PHP - serverové skriptovanie, základy syntaxe, premenné, funkcie, práca s databázami (napr. MySQL), zabezpečenie PHP skriptov, integrovanie s HTML a CSS.\"\r\n        },\r\n        {\r\n            type: \"Theory\",\r\n            title: \"Princípy Vektorového Designu a Tvorby Loga\",\r\n            content: \"Základy vektorovej grafiky - rozlíšenie medzi vektormi a rastrovými obrázkami, výhody vektorových grafík. Softvérové nástroje pre vektorový design (Adobe Illustrator, CorelDraw, Inkscape). Kľúčové princípy návrhu loga - jednoduchosť, rozpoznateľnosť, farby, typografia. Postup návrhu loga od konceptu k realizácii.\"\r\n        },\r\n        {\r\n            type: \"Theory\",\r\n            title: \"Návrh a Použitie Vlastných Fontov na Webstránke\",\r\n            content: \"Proces návrhu fontov - od nápadu, skicovania, digitálneho prototypovania až po finalizáciu. Prehľad softvéru pre návrh fontov (napr. FontForge, Glyphs). Typografické princípy pre web - výber a kombinovanie fontov, čitateľnosť, konzistentnosť. Technické aspekty implementácie custom fontov v CSS, súvisiace s @font-face, formátmi fontov a webovou kompatibilitou.\"\r\n        },\r\n    ];\r\n\r\n\r\n    const practicalSlides: PracticalSlide[] = [\r\n        {\r\n            type: \"Practical\",\r\n            title: \"Kvíz o Základoch Webhostingu a HTML/PHP\",\r\n            content: \"Overte si svoje vedomosti o nastavení webhostingu a tvorbe základných HTML/PHP stránok.\",\r\n            exercise: {\r\n                type: \"multiple-choice\",\r\n                questions: [\r\n                    {\r\n                        question: \"Ktorý tag v HTML slúži na vloženie PHP skriptu?\",\r\n                        options: [\"<php>\", \"<script>\", \"<?php>\"],\r\n                        correctAnswer: \"<?php>\"\r\n                    },\r\n                    {\r\n                        question: \"Aká je hlavná funkcia webhostingu?\",\r\n                        options: [\"Uloženie dát\", \"Spracovanie PHP\", \"Vytváranie dizajnu\"],\r\n                        correctAnswer: \"Uloženie dát\"\r\n                    },\r\n                    // Pridajte ďalšie otázky\r\n                ]\r\n            }\r\n        },\r\n        {\r\n            type: \"Practical\",\r\n            title: \"Návrh Vlastného Vektorového Loga\",\r\n            content: \"Navrhnite a implementujte svoje vlastné vektorové logo na webstránku.\",\r\n            exercise: {\r\n                type: \"interactive\",\r\n                instructions: \"Pomocou vektorového grafického editora vytvorte logo pre váš projekt a následne ho vložte do hlavičky vašej HTML stránky.\"\r\n            }\r\n        },\r\n        {\r\n            type: \"Practical\",\r\n            title: \"Tvorba a Aplikácia Vlastného Fontu na Webstránke\",\r\n            content: \"Navrhnite si vlastný font a aplikujte ho na vašu webstránku.\",\r\n            exercise: {\r\n                type: \"interactive\",\r\n                instructions: \"Pomocou nástroja na návrh fontov vytvorte vlastný font. Potom vložte font do CSS vašej webstránky a aplikujte ho na text.\"\r\n            }\r\n        }\r\n    ];\r\n\r\n\r\n    const conclusionSlide: ConclusionSlide = {\r\n        type: \"Conclusion\",\r\n        title: \"Summary of Key Concepts\",\r\n        content: \"Recap of the key points covered in the course, emphasizing the importance of storytelling, technical skills, and creativity in video editing.\"\r\n    };\r\n\r\n    const slides: Slide[] = [...theorySlides, ...practicalSlides, conclusionSlide];\r\n\r\n    const goToNextSlide = () => {\r\n        setCurrentSlide(currentSlide + 1);\r\n        setSelectedOption(null);\r\n    };\r\n\r\n    const goToPreviousSlide = () => {\r\n        setCurrentSlide(currentSlide - 1);\r\n        setSelectedOption(null);\r\n    };\r\n\r\n    const handleMultipleChoiceSelection = (question: string, option: string) => {\r\n        setSelectedAnswers(prev => ({ ...prev, [question]: option }));\r\n    };\r\n\r\n    const isAnswerCorrect = (question: string, option: string) => {\r\n        const currentExercise = (slides[currentSlide] as PracticalSlide).exercise;\r\n        if (currentExercise.type === \"multiple-choice\") {\r\n            const correctAnswer = currentExercise.questions.find((q: any) => q.question === question).correctAnswer;\r\n            return option === correctAnswer;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    const renderMultipleChoiceQuestions = (exercise: any) => {\r\n        return (\r\n            <div>\r\n                {exercise.questions.map((question: any, index: number) => (\r\n                    <div key={index} className=\"quiz-question\">\r\n                        <p>{question.question}</p>\r\n                        {question.options.map((option: string, optIndex: number) => (\r\n                            <button\r\n                                key={optIndex}\r\n                                onClick={() => handleMultipleChoiceSelection(question.question, option)}\r\n                                className={selectedAnswers[question.question] === option ? 'selected' : ''}\r\n                            >\r\n                                {option}\r\n                            </button>\r\n                        ))}\r\n                        {selectedAnswers[question.question] &&\r\n                            <p className={isAnswerCorrect(question.question, selectedAnswers[question.question]) ? 'correct' : 'incorrect'}>\r\n                                {isAnswerCorrect(question.question, selectedAnswers[question.question]) ? 'Correct answer!' : 'Incorrect answer.'}\r\n                            </p>\r\n                        }\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const handleDragStart = (item: string, fromBlank: boolean = false) => {\r\n        if (fromBlank) {\r\n            // If dragging from a blank, remove the item from the blank\r\n            const updatedBlanks = { ...filledBlanks };\r\n            for (const key in updatedBlanks) {\r\n                if (updatedBlanks[key] === item) {\r\n                    updatedBlanks[key] = \"____\"; // Reset the blank\r\n                    break;\r\n                }\r\n            }\r\n            setFilledBlanks(updatedBlanks);\r\n        }\r\n        setDraggedItem(item);\r\n    };\r\n\r\n\r\n    const handleDrop = (blankIndex: number) => {\r\n        if (draggedItem) {\r\n            const blankKey = `blank${blankIndex + 1}`; // Adjust index to match key structure\r\n            setFilledBlanks(prev => ({ ...prev, [blankKey]: draggedItem }));\r\n            setDraggedItem(null);\r\n        }\r\n    };\r\n\r\n\r\n    const checkAnswers = () => {\r\n        const currentSlideData = slides[currentSlide] as PracticalSlide;\r\n        if (currentSlideData.type === \"Practical\" && currentSlideData.exercise.type === \"drag-and-drop\") {\r\n            let allCorrect = true;\r\n            const { blanks } = currentSlideData.exercise;\r\n\r\n            for (const blankKey in blanks) {\r\n                if (!Object.values(filledBlanks).includes(blanks[blankKey])) {\r\n                    allCorrect = false;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            setCheckResult(allCorrect ? \"All answers are correct!\" : \"Some answers are incorrect.\");\r\n        }\r\n    };\r\n\r\n    const renderDragAndDropExercise = (exercise: any) => {\r\n        return (\r\n            <div>\r\n                <div className=\"exercise-text\">\r\n                    {exercise.text.map((part: string, index: number) => (\r\n                        part === \"____\" ?\r\n                            <div\r\n                                key={index}\r\n                                className=\"blank\"\r\n                                onDrop={() => handleDrop(index)}\r\n                                onDragOver={(e) => e.preventDefault()}\r\n                                draggable\r\n                                onDragStart={() => handleDragStart(filledBlanks[`blank${index + 1}`], true)}\r\n                            >\r\n                                {filledBlanks[`blank${index + 1}`] || part}\r\n                            </div> :\r\n                            <span key={index}>{part}</span>\r\n                    ))}\r\n                </div>\r\n                <div className=\"options\">\r\n                    {exercise.options.map((option: string, index: number) => (\r\n                        <div\r\n                            key={index}\r\n                            className=\"draggable-option\"\r\n                            draggable\r\n                            onDragStart={() => handleDragStart(option)}\r\n                        >\r\n                            {option}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <button onClick={checkAnswers} className=\"check-answers-btn\">\r\n                    Check Answers\r\n                </button>\r\n                {checkResult && (\r\n                    <div className={`check-result ${checkResult === \"All answers are correct!\" ? 'correct' : 'incorrect'}`}>\r\n                        {checkResult}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const renderExerciseContent = (exercise: any) => {\r\n        switch (exercise.type) {\r\n            case 'multiple-choice':\r\n                return renderMultipleChoiceQuestions(exercise);\r\n            case 'drag-and-drop':\r\n                return renderDragAndDropExercise(exercise);\r\n            default:\r\n                return null;\r\n        }\r\n    };\r\n\r\n    const renderSlideContent = () => {\r\n        const slide = slides[currentSlide];\r\n\r\n        return (\r\n            <div>\r\n                <p>{slide.content}</p>\r\n                {slide.type === 'Practical' && renderExerciseContent(slide.exercise)}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"popup-content\">\r\n            <h2>{slides[currentSlide].title}</h2>\r\n            {renderSlideContent()}\r\n            <div className=\"navigation-buttons\">\r\n                <button onClick={goToPreviousSlide} disabled={currentSlide === 0}>Previous</button>\r\n                <button onClick={goToNextSlide} disabled={currentSlide === slides.length - 1}>Next</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PopUpContent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}