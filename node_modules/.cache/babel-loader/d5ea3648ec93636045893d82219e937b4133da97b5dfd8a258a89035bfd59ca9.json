{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\peter\\\\OneDrive\\\\idk\\\\Dokumenty\\\\Multimedia\\\\src\\\\components\\\\MainPageComponents\\\\Second\\\\PopUpContent\\\\PopUpContent.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './PopUpContent.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PopUpContent = () => {\n  _s();\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const theorySlides = [{\n    type: \"Theory\",\n    title: \"Introduction to Video Editing Software\",\n    content: \"Learn about different types of video editing software, their interfaces, and key features...\"\n  }, {\n    type: \"Theory\",\n    title: \"Basic Editing Techniques\",\n    content: \"Explore the fundamentals of cutting, trimming, and sequencing clips to tell a story...\"\n  }, {\n    type: \"Theory\",\n    title: \"Sound Design in Video Editing\",\n    content: \"Understand the importance of sound, how to add soundtracks, and balance audio in your edits...\"\n  }, {\n    type: \"Theory\",\n    title: \"Color Correction and Grading\",\n    content: \"Discover how to enhance your video's look with color correction and grading...\"\n  }\n  // Add more theory slides as needed\n  ];\n\n  const practicalSlides = [{\n    type: \"Practical\",\n    title: \"Video Software Features Quiz\",\n    content: \"Test your knowledge on different video editing software features.\",\n    exercise: {\n      type: \"multiple-choice\",\n      questions: [\n      // Sample question\n      {\n        question: \"Which software uses a Magnetic Timeline?\",\n        options: [\"Adobe Premiere Pro\", \"Final Cut Pro\", \"DaVinci Resolve\"],\n        correctAnswer: \"Final Cut Pro\"\n      }\n      // Add more questions\n      ]\n    }\n  }, {\n    type: \"Practical\",\n    title: \"Match the Editing Technique\",\n    content: \"Drag each editing technique to its correct definition.\",\n    exercise: {\n      type: \"drag-and-drop\",\n      items: [\n      // Sample item\n      {\n        option: \"L-Cut\",\n        targets: [\"Audio transitions before video\"]\n      }\n      // Add more items\n      ]\n    }\n  }, {\n    type: \"Practical\",\n    title: \"Sound Design Challenge\",\n    content: \"Match the sound type with its correct example.\",\n    exercise: {\n      type: \"matching\",\n      pairs: [\n      // Sample pair\n      {\n        left: \"Diegetic Sound\",\n        right: \"Dialogue within a scene\"\n      }\n      // Add more pairs\n      ]\n    }\n  }\n  // Add more practical slides as needed\n  ];\n\n  const conclusionSlide = {\n    type: \"Conclusion\",\n    title: \"Summary of Key Concepts\",\n    content: \"Recap of the key points covered in the course, emphasizing the importance of storytelling, technical skills, and creativity in video editing.\"\n  };\n  const slides = [...theorySlides, ...practicalSlides, conclusionSlide];\n  const handleOptionSelect = option => {\n    setSelectedOption(option);\n  };\n  const goToNextSlide = () => {\n    setCurrentSlide(currentSlide + 1);\n    setSelectedOption(null);\n  };\n  const goToPreviousSlide = () => {\n    setCurrentSlide(currentSlide - 1);\n    setSelectedOption(null);\n  };\n  const handleMultipleChoiceSelection = (question, option) => {\n    setSelectedAnswers(prev => ({\n      ...prev,\n      [question]: option\n    }));\n  };\n  const isAnswerCorrect = (question, option) => {\n    const currentExercise = slides[currentSlide].exercise;\n    if (currentExercise.type === \"multiple-choice\") {\n      const correctAnswer = currentExercise.questions.find(q => q.question === question).correctAnswer;\n      return option === correctAnswer;\n    }\n    return false;\n  };\n  const renderMultipleChoiceQuestions = exercise => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: exercise.questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: question.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 25\n        }, this), question.options.map((option, optIndex) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleMultipleChoiceSelection(question.question, option),\n          children: option\n        }, optIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 29\n        }, this))]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this);\n  };\n  const renderDragAndDropExercise = exercise => {\n    // Simplified version; for full implementation consider using react-dnd\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: exercise.items.map((item, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Drag \", item.option, \" to \", item.targets.join(\", \")]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 21\n      }, this)\n      // Implement drag and drop functionality here\n      )\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this);\n  };\n  const renderMatchingExercise = exercise => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: exercise.pairs.map((pair, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: pair.left\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 25\n        }, this), \" matches with \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: pair.right\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 63\n        }, this), \"// Implement matching functionality here\"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this);\n  };\n  const renderExerciseContent = exercise => {\n    switch (exercise.type) {\n      case 'multiple-choice':\n        return renderMultipleChoiceQuestions(exercise);\n      case 'drag-and-drop':\n        return renderDragAndDropExercise(exercise);\n      case 'matching':\n        return renderMatchingExercise(exercise);\n      default:\n        return null;\n    }\n  };\n  const renderSlideContent = () => {\n    const slide = slides[currentSlide];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: slide.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }, this), slide.type === 'Practical' && renderExerciseContent(slide.exercise)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popup-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: slides[currentSlide].title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }, this), renderSlideContent(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navigation-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: goToPreviousSlide,\n        disabled: currentSlide === 0,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: goToNextSlide,\n        disabled: currentSlide === slides.length - 1,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 9\n  }, this);\n};\n_s(PopUpContent, \"h9K25Yj9PtQXogFMfYxiDKhRMfE=\");\n_c = PopUpContent;\nexport default PopUpContent;\nvar _c;\n$RefreshReg$(_c, \"PopUpContent\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PopUpContent","_s","currentSlide","setCurrentSlide","selectedOption","setSelectedOption","theorySlides","type","title","content","practicalSlides","exercise","questions","question","options","correctAnswer","items","option","targets","pairs","left","right","conclusionSlide","slides","handleOptionSelect","goToNextSlide","goToPreviousSlide","handleMultipleChoiceSelection","setSelectedAnswers","prev","isAnswerCorrect","currentExercise","find","q","renderMultipleChoiceQuestions","children","map","index","fileName","_jsxFileName","lineNumber","columnNumber","optIndex","onClick","renderDragAndDropExercise","item","join","renderMatchingExercise","pair","renderExerciseContent","renderSlideContent","slide","className","disabled","length","_c","$RefreshReg$"],"sources":["C:/Users/peter/OneDrive/idk/Dokumenty/Multimedia/src/components/MainPageComponents/Second/PopUpContent/PopUpContent.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './PopUpContent.scss';\r\n\r\ninterface TheorySlide {\r\n    type: \"Theory\";\r\n    title: string;\r\n    content: string;\r\n}\r\n\r\ninterface PracticalSlide {\r\n    type: \"Practical\";\r\n    title: string;\r\n    content: string;\r\n    exercise: any; // Define a more specific type for your exercises\r\n}\r\n\r\ninterface ConclusionSlide {\r\n    type: \"Conclusion\";\r\n    title: string;\r\n    content: string;\r\n}\r\n\r\ntype Slide = TheorySlide | PracticalSlide | ConclusionSlide;\r\n\r\nconst PopUpContent = () => {\r\n    const [currentSlide, setCurrentSlide] = useState<number>(0);\r\n    const [selectedOption, setSelectedOption] = useState<string | null>(null);\r\n\r\n    const theorySlides: TheorySlide[] = [\r\n        {\r\n            type: \"Theory\",\r\n            title: \"Introduction to Video Editing Software\",\r\n            content: \"Learn about different types of video editing software, their interfaces, and key features...\"\r\n        },\r\n        {\r\n            type: \"Theory\",\r\n            title: \"Basic Editing Techniques\",\r\n            content: \"Explore the fundamentals of cutting, trimming, and sequencing clips to tell a story...\"\r\n        },\r\n        {\r\n            type: \"Theory\",\r\n            title: \"Sound Design in Video Editing\",\r\n            content: \"Understand the importance of sound, how to add soundtracks, and balance audio in your edits...\"\r\n        },\r\n        {\r\n            type: \"Theory\",\r\n            title: \"Color Correction and Grading\",\r\n            content: \"Discover how to enhance your video's look with color correction and grading...\"\r\n        },\r\n        // Add more theory slides as needed\r\n    ];\r\n\r\n    const practicalSlides: PracticalSlide[] = [\r\n        {\r\n            type: \"Practical\",\r\n            title: \"Video Software Features Quiz\",\r\n            content: \"Test your knowledge on different video editing software features.\",\r\n            exercise: {\r\n                type: \"multiple-choice\",\r\n                questions: [\r\n                    // Sample question\r\n                    {\r\n                        question: \"Which software uses a Magnetic Timeline?\",\r\n                        options: [\"Adobe Premiere Pro\", \"Final Cut Pro\", \"DaVinci Resolve\"],\r\n                        correctAnswer: \"Final Cut Pro\"\r\n                    },\r\n                    // Add more questions\r\n                ]\r\n            }\r\n        },\r\n        {\r\n            type: \"Practical\",\r\n            title: \"Match the Editing Technique\",\r\n            content: \"Drag each editing technique to its correct definition.\",\r\n            exercise: {\r\n                type: \"drag-and-drop\",\r\n                items: [\r\n                    // Sample item\r\n                    { option: \"L-Cut\", targets: [\"Audio transitions before video\"] },\r\n                    // Add more items\r\n                ]\r\n            }\r\n        },\r\n        {\r\n            type: \"Practical\",\r\n            title: \"Sound Design Challenge\",\r\n            content: \"Match the sound type with its correct example.\",\r\n            exercise: {\r\n                type: \"matching\",\r\n                pairs: [\r\n                    // Sample pair\r\n                    { left: \"Diegetic Sound\", right: \"Dialogue within a scene\" },\r\n                    // Add more pairs\r\n                ]\r\n            }\r\n        },\r\n        // Add more practical slides as needed\r\n    ];\r\n\r\n\r\n    const conclusionSlide: ConclusionSlide = {\r\n        type: \"Conclusion\",\r\n        title: \"Summary of Key Concepts\",\r\n        content: \"Recap of the key points covered in the course, emphasizing the importance of storytelling, technical skills, and creativity in video editing.\"\r\n    };\r\n\r\n    const slides: Slide[] = [...theorySlides, ...practicalSlides, conclusionSlide];\r\n\r\n\r\n    const handleOptionSelect = (option: string) => {\r\n        setSelectedOption(option);\r\n    };\r\n\r\n    const goToNextSlide = () => {\r\n        setCurrentSlide(currentSlide + 1);\r\n        setSelectedOption(null);\r\n    };\r\n\r\n    const goToPreviousSlide = () => {\r\n        setCurrentSlide(currentSlide - 1);\r\n        setSelectedOption(null);\r\n    };\r\n\r\n    const handleMultipleChoiceSelection = (question: string, option: string) => {\r\n        setSelectedAnswers(prev => ({ ...prev, [question]: option }));\r\n    };\r\n\r\n    const isAnswerCorrect = (question: string, option: string) => {\r\n        const currentExercise = (slides[currentSlide] as PracticalSlide).exercise;\r\n        if (currentExercise.type === \"multiple-choice\") {\r\n            const correctAnswer = currentExercise.questions.find((q: any) => q.question === question).correctAnswer;\r\n            return option === correctAnswer;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    const renderMultipleChoiceQuestions = (exercise: any) => {\r\n        return (\r\n            <div>\r\n                {exercise.questions.map((question: any, index: number) => (\r\n                    <div key={index}>\r\n                        <p>{question.question}</p>\r\n                        {question.options.map((option: string, optIndex: number) => (\r\n                            <button key={optIndex} onClick={() => handleMultipleChoiceSelection(question.question, option)}>\r\n                                {option}\r\n                            </button>\r\n                        ))}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const renderDragAndDropExercise = (exercise: any) => {\r\n        // Simplified version; for full implementation consider using react-dnd\r\n        return (\r\n            <div>\r\n                {exercise.items.map((item: any, index: number) => (\r\n                    <p key={index}>Drag {item.option} to {item.targets.join(\", \")}</p>\r\n                    // Implement drag and drop functionality here\r\n                ))}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const renderMatchingExercise = (exercise: any) => {\r\n        return (\r\n            <div>\r\n                {exercise.pairs.map((pair: any, index: number) => (\r\n                    <div key={index}>\r\n                        <span>{pair.left}</span> matches with <span>{pair.right}</span>\r\n                        // Implement matching functionality here\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const renderExerciseContent = (exercise: any) => {\r\n        switch (exercise.type) {\r\n            case 'multiple-choice':\r\n                return renderMultipleChoiceQuestions(exercise);\r\n            case 'drag-and-drop':\r\n                return renderDragAndDropExercise(exercise);\r\n            case 'matching':\r\n                return renderMatchingExercise(exercise);\r\n            default:\r\n                return null;\r\n        }\r\n    };\r\n\r\n    const renderSlideContent = () => {\r\n        const slide = slides[currentSlide];\r\n\r\n        return (\r\n            <div>\r\n                <p>{slide.content}</p>\r\n                {slide.type === 'Practical' && renderExerciseContent(slide.exercise)}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"popup-content\">\r\n            <h2>{slides[currentSlide].title}</h2>\r\n            {renderSlideContent()}\r\n            <div className=\"navigation-buttons\">\r\n                <button onClick={goToPreviousSlide} disabled={currentSlide === 0}>Previous</button>\r\n                <button onClick={goToNextSlide} disabled={currentSlide === slides.length - 1}>Next</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PopUpContent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}