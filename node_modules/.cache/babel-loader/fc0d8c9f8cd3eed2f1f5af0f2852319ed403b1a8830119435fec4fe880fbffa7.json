{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\peter\\\\OneDrive\\\\idk\\\\Dokumenty\\\\Multimedia\\\\src\\\\components\\\\MainPageComponents\\\\Second\\\\Second.tsx\";\nimport React from 'react';\nimport './Second.scss';\nimport Course from './Course/Course';\nimport MediaImage from \"../../../global/assets/media.svg\";\nimport MusicImage from \"../../../global/assets/music2.svg\";\nimport ImageCourseImage from \"../../../global/assets/image_course.svg\";\nimport CourseDetails from \"./CourseDetails/CourseDetails\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Second = props => {\n  var _courseDetails, _courseDetails2;\n  const coursesData = [{\n    id: 1,\n    title: \"Media\",\n    image: MediaImage,\n    article: \"Media course article\"\n  }, {\n    id: 2,\n    title: \"Music\",\n    image: MusicImage,\n    article: \"Music course article\"\n  }, {\n    id: 3,\n    title: \"Image\",\n    image: ImageCourseImage,\n    article: \"Image course article\"\n  }];\n  const handleCourseClick = courseId => {\n    const selectedCourse = coursesData.find(course => course.id === courseId); // corrected type of courseId parameter\n\n    if (selectedCourse) {\n      setCourseDetails({\n        // updated handling of selectedCourse\n        title: selectedCourse.title,\n        article: selectedCourse.article\n      });\n      if (popupRef.current) {\n        popupRef.current.show(); // corrected call to show method\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"MainCourses\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Our courses\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Courses\",\n      children: coursesData.map(course => /*#__PURE__*/_jsxDEV(Course, {\n        title: course.title,\n        image: course.image,\n        onClick: () => handleCourseClick(course.id) // corrected type of onClick prop\n      }, course.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CourseDetails, {\n      ref: popupRef,\n      visible: !!courseDetails // corrected handling of courseDetails\n      ,\n      title: (_courseDetails = courseDetails) === null || _courseDetails === void 0 ? void 0 : _courseDetails.title // corrected type of title prop\n      ,\n      article: (_courseDetails2 = courseDetails) === null || _courseDetails2 === void 0 ? void 0 : _courseDetails2.article // corrected type of article prop\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_c = Second;\nexport default Second;\nvar _c;\n$RefreshReg$(_c, \"Second\");","map":{"version":3,"names":["React","Course","MediaImage","MusicImage","ImageCourseImage","CourseDetails","jsxDEV","_jsxDEV","Second","props","_courseDetails","_courseDetails2","coursesData","id","title","image","article","handleCourseClick","courseId","selectedCourse","find","course","setCourseDetails","popupRef","current","show","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","ref","visible","courseDetails","_c","$RefreshReg$"],"sources":["C:/Users/peter/OneDrive/idk/Dokumenty/Multimedia/src/components/MainPageComponents/Second/Second.tsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport './Second.scss';\r\nimport Course from './Course/Course';\r\nimport MediaImage from \"../../../global/assets/media.svg\";\r\nimport MusicImage from \"../../../global/assets/music2.svg\";\r\nimport ImageCourseImage from \"../../../global/assets/image_course.svg\";\r\nimport CourseDetails from \"./CourseDetails/CourseDetails\";\r\n\r\ninterface SecondProps {\r\n}\r\n\r\nexport const Second: React.FC<SecondProps> = props => {\r\n\r\n    const coursesData = [\r\n        { id: 1, title: \"Media\", image: MediaImage, article: \"Media course article\" },\r\n        { id: 2, title: \"Music\", image: MusicImage, article: \"Music course article\" },\r\n        { id: 3, title: \"Image\", image: ImageCourseImage, article: \"Image course article\" },\r\n    ];\r\n\r\n    const handleCourseClick = (courseId: number) => {\r\n        const selectedCourse = coursesData.find((course) => course.id === courseId); // corrected type of courseId parameter\r\n\r\n        if (selectedCourse) {\r\n            setCourseDetails({ // updated handling of selectedCourse\r\n                title: selectedCourse.title,\r\n                article: selectedCourse.article,\r\n            });\r\n\r\n            if (popupRef.current) {\r\n                popupRef.current.show(); // corrected call to show method\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"MainCourses\">\r\n            <h1>Our courses</h1>\r\n            <div className=\"Courses\">\r\n                {coursesData.map((course) => (\r\n                    <Course\r\n                        key={course.id}\r\n                        title={course.title}\r\n                        image={course.image}\r\n                        onClick={() => handleCourseClick(course.id)} // corrected type of onClick prop\r\n                    ></Course>\r\n                ))}\r\n            </div>\r\n\r\n            <CourseDetails\r\n                ref={popupRef}\r\n                visible={!!courseDetails} // corrected handling of courseDetails\r\n                title={courseDetails?.title} // corrected type of title prop\r\n                article={courseDetails?.article} // corrected type of article prop\r\n            ></CourseDetails>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Second;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAA4B,OAAO;AAC/C,OAAO,eAAe;AACtB,OAAOC,MAAM,MAAM,iBAAiB;AACpC,OAAOC,UAAU,MAAM,kCAAkC;AACzD,OAAOC,UAAU,MAAM,mCAAmC;AAC1D,OAAOC,gBAAgB,MAAM,yCAAyC;AACtE,OAAOC,aAAa,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAK1D,OAAO,MAAMC,MAA6B,GAAGC,KAAK,IAAI;EAAA,IAAAC,cAAA,EAAAC,eAAA;EAElD,MAAMC,WAAW,GAAG,CAChB;IAAEC,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,OAAO;IAAEC,KAAK,EAAEb,UAAU;IAAEc,OAAO,EAAE;EAAuB,CAAC,EAC7E;IAAEH,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,OAAO;IAAEC,KAAK,EAAEZ,UAAU;IAAEa,OAAO,EAAE;EAAuB,CAAC,EAC7E;IAAEH,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,OAAO;IAAEC,KAAK,EAAEX,gBAAgB;IAAEY,OAAO,EAAE;EAAuB,CAAC,CACtF;EAED,MAAMC,iBAAiB,GAAIC,QAAgB,IAAK;IAC5C,MAAMC,cAAc,GAAGP,WAAW,CAACQ,IAAI,CAAEC,MAAM,IAAKA,MAAM,CAACR,EAAE,KAAKK,QAAQ,CAAC,CAAC,CAAC;;IAE7E,IAAIC,cAAc,EAAE;MAChBG,gBAAgB,CAAC;QAAE;QACfR,KAAK,EAAEK,cAAc,CAACL,KAAK;QAC3BE,OAAO,EAAEG,cAAc,CAACH;MAC5B,CAAC,CAAC;MAEF,IAAIO,QAAQ,CAACC,OAAO,EAAE;QAClBD,QAAQ,CAACC,OAAO,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;MAC7B;IACJ;EACJ,CAAC;;EAED,oBACIlB,OAAA;IAAKmB,SAAS,EAAC,aAAa;IAAAC,QAAA,gBACxBpB,OAAA;MAAAoB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBxB,OAAA;MAAKmB,SAAS,EAAC,SAAS;MAAAC,QAAA,EACnBf,WAAW,CAACoB,GAAG,CAAEX,MAAM,iBACpBd,OAAA,CAACN,MAAM;QAEHa,KAAK,EAAEO,MAAM,CAACP,KAAM;QACpBC,KAAK,EAAEM,MAAM,CAACN,KAAM;QACpBkB,OAAO,EAAEA,CAAA,KAAMhB,iBAAiB,CAACI,MAAM,CAACR,EAAE,CAAE,CAAC;MAAA,GAHxCQ,MAAM,CAACR,EAAE;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIT,CACZ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eAENxB,OAAA,CAACF,aAAa;MACV6B,GAAG,EAAEX,QAAS;MACdY,OAAO,EAAE,CAAC,CAACC,aAAc,CAAC;MAAA;MAC1BtB,KAAK,GAAAJ,cAAA,GAAE0B,aAAa,cAAA1B,cAAA,uBAAbA,cAAA,CAAeI,KAAM,CAAC;MAAA;MAC7BE,OAAO,GAAAL,eAAA,GAAEyB,aAAa,cAAAzB,eAAA,uBAAbA,eAAA,CAAeK,OAAQ,CAAC;IAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChB,CAAC;AAEd,CAAC;AAACM,EAAA,GA7CW7B,MAA6B;AA+C1C,eAAeA,MAAM;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}