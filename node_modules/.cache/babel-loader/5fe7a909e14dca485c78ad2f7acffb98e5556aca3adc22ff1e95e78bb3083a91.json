{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\peter\\\\OneDrive\\\\idk\\\\Dokumenty\\\\Multimedia\\\\src\\\\components\\\\Game\\\\Game.tsx\",\n  _s = $RefreshSig$();\n// Game.tsx\n\nimport React, { useState } from 'react';\nimport { useDrop } from 'react-dnd';\nimport { TextBlock } from './TextBlock';\nimport { BlockTypes } from './Types';\nimport './Game.scss'; // Import your SCSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = ({\n  blocks\n}) => {\n  _s();\n  const [droppedBlocks, setDroppedBlocks] = useState([]);\n  const handleDrop = blockId => {\n    setDroppedBlocks(prevBlocks => [...prevBlocks, blockId]);\n  };\n  const [{\n    isOver\n  }, drop] = useDrop({\n    accept: BlockTypes.TEXT,\n    drop: item => handleDrop(item.id),\n    collect: monitor => ({\n      isOver: !!monitor.isOver()\n    })\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `drop-area ${isOver ? 'highlight' : ''}`,\n      ref: drop,\n      children: \"Drop here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"blocks-container\",\n      children: blocks.map(block => /*#__PURE__*/_jsxDEV(TextBlock, {\n        id: block.id,\n        text: block.text,\n        type: block.type,\n        isDropped: droppedBlocks.includes(block.id),\n        isAnimating: isOver && !droppedBlocks.includes(block.id)\n      }, block.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(Game, \"pm8BaQyRRs5q09ZX6wL2jJHcu4E=\", false, function () {\n  return [useDrop];\n});\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useDrop","TextBlock","BlockTypes","jsxDEV","_jsxDEV","Game","blocks","_s","droppedBlocks","setDroppedBlocks","handleDrop","blockId","prevBlocks","isOver","drop","accept","TEXT","item","id","collect","monitor","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","map","block","text","type","isDropped","includes","isAnimating","_c","$RefreshReg$"],"sources":["C:/Users/peter/OneDrive/idk/Dokumenty/Multimedia/src/components/Game/Game.tsx"],"sourcesContent":["// Game.tsx\r\n\r\nimport React, { useState } from 'react';\r\nimport { useDrop } from 'react-dnd';\r\nimport { TextBlock } from './TextBlock';\r\nimport { BlockTypes } from './Types';\r\nimport './Game.scss'; // Import your SCSS file\r\n\r\ninterface GameProps {\r\n    blocks: { id: number; text: string; type: string; isDropped: boolean }[];\r\n}\r\n\r\nconst Game: React.FC<GameProps> = ({ blocks }) => {\r\n    const [droppedBlocks, setDroppedBlocks] = useState<number[]>([]);\r\n\r\n    const handleDrop = (blockId: number) => {\r\n        setDroppedBlocks((prevBlocks) => [...prevBlocks, blockId]);\r\n    };\r\n\r\n    const [{ isOver }, drop] = useDrop({\r\n        accept: BlockTypes.TEXT,\r\n        drop: (item: { id: number; type: string }) => handleDrop(item.id),\r\n        collect: (monitor) => ({\r\n            isOver: !!monitor.isOver(),\r\n        }),\r\n    });\r\n\r\n    return (\r\n        <div className=\"game\">\r\n            <div className={`drop-area ${isOver ? 'highlight' : ''}`} ref={drop}>\r\n                Drop here\r\n            </div>\r\n            <div className=\"blocks-container\">\r\n                {blocks.map((block) => (\r\n                    <TextBlock\r\n                        key={block.id}\r\n                        id={block.id}\r\n                        text={block.text}\r\n                        type={block.type}\r\n                        isDropped={droppedBlocks.includes(block.id)}\r\n                        isAnimating={isOver && !droppedBlocks.includes(block.id)}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Game;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,OAAO,QAAQ,WAAW;AACnC,SAASC,SAAS,QAAQ,aAAa;AACvC,SAASC,UAAU,QAAQ,SAAS;AACpC,OAAO,aAAa,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAMtB,MAAMC,IAAyB,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAC9C,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAW,EAAE,CAAC;EAEhE,MAAMW,UAAU,GAAIC,OAAe,IAAK;IACpCF,gBAAgB,CAAEG,UAAU,IAAK,CAAC,GAAGA,UAAU,EAAED,OAAO,CAAC,CAAC;EAC9D,CAAC;EAED,MAAM,CAAC;IAAEE;EAAO,CAAC,EAAEC,IAAI,CAAC,GAAGd,OAAO,CAAC;IAC/Be,MAAM,EAAEb,UAAU,CAACc,IAAI;IACvBF,IAAI,EAAGG,IAAkC,IAAKP,UAAU,CAACO,IAAI,CAACC,EAAE,CAAC;IACjEC,OAAO,EAAGC,OAAO,KAAM;MACnBP,MAAM,EAAE,CAAC,CAACO,OAAO,CAACP,MAAM,CAAC;IAC7B,CAAC;EACL,CAAC,CAAC;EAEF,oBACIT,OAAA;IAAKiB,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACjBlB,OAAA;MAAKiB,SAAS,EAAG,aAAYR,MAAM,GAAG,WAAW,GAAG,EAAG,EAAE;MAACU,GAAG,EAAET,IAAK;MAAAQ,QAAA,EAAC;IAErE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNvB,OAAA;MAAKiB,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAC5BhB,MAAM,CAACsB,GAAG,CAAEC,KAAK,iBACdzB,OAAA,CAACH,SAAS;QAENiB,EAAE,EAAEW,KAAK,CAACX,EAAG;QACbY,IAAI,EAAED,KAAK,CAACC,IAAK;QACjBC,IAAI,EAAEF,KAAK,CAACE,IAAK;QACjBC,SAAS,EAAExB,aAAa,CAACyB,QAAQ,CAACJ,KAAK,CAACX,EAAE,CAAE;QAC5CgB,WAAW,EAAErB,MAAM,IAAI,CAACL,aAAa,CAACyB,QAAQ,CAACJ,KAAK,CAACX,EAAE;MAAE,GALpDW,KAAK,CAACX,EAAE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMhB,CACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACpB,EAAA,CAlCIF,IAAyB;EAAA,QAOAL,OAAO;AAAA;AAAAmC,EAAA,GAPhC9B,IAAyB;AAoC/B,eAAeA,IAAI;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}