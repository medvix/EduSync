{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\peter\\\\OneDrive\\\\idk\\\\Dokumenty\\\\Multimedia\\\\src\\\\components\\\\Game\\\\Game.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useDrag, useDrop, DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport \"./Game.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DraggableBlock = ({\n  index,\n  text,\n  onDrop\n}) => {\n  _s();\n  const [{\n    isDragging\n  }, drag] = useDrag({\n    type: \"BLOCK\",\n    item: {\n      index,\n      text\n    },\n    collect: monitor => ({\n      isDragging: monitor.isDragging()\n    })\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: drag,\n    className: `block ${isDragging ? \"dragging\" : \"\"}`,\n    onClick: () => onDrop(index),\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(DraggableBlock, \"wuumsFp4qAni9XRJfRhQAZjuD/k=\", false, function () {\n  return [useDrag];\n});\n_c = DraggableBlock;\nconst DroppableBlank = ({\n  index,\n  text,\n  onDrop\n}) => {\n  _s2();\n  const [{\n    canDrop,\n    isOver\n  }, drop] = useDrop({\n    accept: \"BLOCK\",\n    drop: () => onDrop(index),\n    collect: monitor => ({\n      isOver: monitor.isOver(),\n      canDrop: monitor.canDrop()\n    })\n  });\n  const isActive = canDrop && isOver;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: drop,\n    className: `blank ${isActive ? \"active\" : \"\"}`,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s2(DroppableBlank, \"F504N0wuFSbvI1XEbEwXUidFCiM=\", false, function () {\n  return [useDrop];\n});\n_c2 = DroppableBlank;\nconst Game = props => {\n  _s3();\n  const [answers, setAnswers] = useState([\"\", \"\", \"\"]); // Initial blank answers\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [blocks, setBlocks] = useState([\"consectetur\", \"labore\", \"exercitation\"]); // Replace with your correct answers\n\n  const multimediaText = \"Lorem ipsum __________ dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut __________ et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco __________ nisi ut aliquip ex ea commodo consequat.\";\n  const handleBlockDrop = (blockIndex, answerIndex) => {\n    const newAnswers = [...answers];\n    newAnswers[answerIndex] = blocks[blockIndex];\n    setAnswers(newAnswers);\n\n    // Remove the used block\n    setBlocks(prevBlocks => prevBlocks.filter((_, index) => index !== blockIndex));\n  };\n  const resetGame = () => {\n    setAnswers([\"\", \"\", \"\"]);\n    setCorrectAnswers(0);\n    setBlocks([\"consectetur\", \"labore\", \"exercitation\"]); // Reset blocks\n  };\n\n  return /*#__PURE__*/_jsxDEV(DndProvider, {\n    backend: HTML5Backend,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: multimediaText.split(\" \").map((word, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n          children: word === \"__________\" ? /*#__PURE__*/_jsxDEV(DroppableBlank, {\n            index: index / 2,\n            text: answers[index / 2],\n            onDrop: answerIndex => handleBlockDrop(answers.indexOf(\"\"), answerIndex)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 19\n          }, this) : `${word} `\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"blocks-container\",\n        children: blocks.map((block, index) => /*#__PURE__*/_jsxDEV(DraggableBlock, {\n          index: index,\n          text: block,\n          onDrop: () => handleBlockDrop(index, answers.indexOf(\"\"))\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGame,\n        children: \"Reset Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n_s3(Game, \"JLbzdYPeh6fBQ8Pe+W1KoJe8T2w=\");\n_c3 = Game;\nexport default Game;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"DraggableBlock\");\n$RefreshReg$(_c2, \"DroppableBlank\");\n$RefreshReg$(_c3, \"Game\");","map":{"version":3,"names":["React","useState","useDrag","useDrop","DndProvider","HTML5Backend","jsxDEV","_jsxDEV","DraggableBlock","index","text","onDrop","_s","isDragging","drag","type","item","collect","monitor","ref","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","DroppableBlank","_s2","canDrop","isOver","drop","accept","isActive","_c2","Game","props","_s3","answers","setAnswers","correctAnswers","setCorrectAnswers","blocks","setBlocks","multimediaText","handleBlockDrop","blockIndex","answerIndex","newAnswers","prevBlocks","filter","_","resetGame","backend","split","map","word","indexOf","block","_c3","$RefreshReg$"],"sources":["C:/Users/peter/OneDrive/idk/Dokumenty/Multimedia/src/components/Game/Game.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useDrag, useDrop, DndProvider } from \"react-dnd\";\r\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\r\nimport \"./Game.scss\";\r\n\r\ninterface GameProps {}\r\n\r\ninterface BlockProps {\r\n    index: number;\r\n    text: string;\r\n    onDrop: (index: number) => void;\r\n}\r\n\r\nconst DraggableBlock: React.FC<BlockProps> = ({ index, text, onDrop }) => {\r\n    const [{ isDragging }, drag] = useDrag({\r\n        type: \"BLOCK\",\r\n        item: { index, text },\r\n        collect: (monitor) => ({\r\n            isDragging: monitor.isDragging(),\r\n        }),\r\n    });\r\n\r\n    return (\r\n        <div\r\n            ref={drag}\r\n            className={`block ${isDragging ? \"dragging\" : \"\"}`}\r\n            onClick={() => onDrop(index)}\r\n        >\r\n            {text}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst DroppableBlank: React.FC<BlockProps> = ({ index, text, onDrop }) => {\r\n    const [{ canDrop, isOver }, drop] = useDrop({\r\n        accept: \"BLOCK\",\r\n        drop: () => onDrop(index),\r\n        collect: (monitor) => ({\r\n            isOver: monitor.isOver(),\r\n            canDrop: monitor.canDrop(),\r\n        }),\r\n    });\r\n\r\n    const isActive = canDrop && isOver;\r\n\r\n    return (\r\n        <div ref={drop} className={`blank ${isActive ? \"active\" : \"\"}`}>\r\n            {text}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Game: React.FC<GameProps> = (props) => {\r\n    const [answers, setAnswers] = useState([\"\", \"\", \"\"]); // Initial blank answers\r\n    const [correctAnswers, setCorrectAnswers] = useState(0);\r\n    const [blocks, setBlocks] = useState([\"consectetur\", \"labore\", \"exercitation\"]); // Replace with your correct answers\r\n\r\n    const multimediaText =\r\n        \"Lorem ipsum __________ dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut __________ et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco __________ nisi ut aliquip ex ea commodo consequat.\";\r\n\r\n    const handleBlockDrop = (blockIndex: number, answerIndex: number) => {\r\n        const newAnswers = [...answers];\r\n        newAnswers[answerIndex] = blocks[blockIndex];\r\n        setAnswers(newAnswers);\r\n\r\n        // Remove the used block\r\n        setBlocks((prevBlocks) => prevBlocks.filter((_, index) => index !== blockIndex));\r\n    };\r\n\r\n    const resetGame = () => {\r\n        setAnswers([\"\", \"\", \"\"]);\r\n        setCorrectAnswers(0);\r\n        setBlocks([\"consectetur\", \"labore\", \"exercitation\"]); // Reset blocks\r\n    };\r\n\r\n    return (\r\n        <DndProvider backend={HTML5Backend}>\r\n            <div>\r\n                <p>\r\n                    {multimediaText.split(\" \").map((word, index) => (\r\n                        <span key={index}>\r\n              {word === \"__________\" ? (\r\n                  <DroppableBlank\r\n                      index={index / 2}\r\n                      text={answers[index / 2]}\r\n                      onDrop={(answerIndex) => handleBlockDrop(answers.indexOf(\"\"), answerIndex)}\r\n                  />\r\n              ) : (\r\n                  `${word} `\r\n              )}\r\n            </span>\r\n                    ))}\r\n                </p>\r\n\r\n                <div className=\"blocks-container\">\r\n                    {blocks.map((block, index) => (\r\n                        <DraggableBlock key={index} index={index} text={block} onDrop={() => handleBlockDrop(index, answers.indexOf(\"\"))} />\r\n                    ))}\r\n                </div>\r\n\r\n                <button onClick={resetGame}>Reset Game</button>\r\n            </div>\r\n        </DndProvider>\r\n    );\r\n};\r\n\r\nexport default Game;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}