{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\peter\\\\OneDrive\\\\idk\\\\Dokumenty\\\\Multimedia\\\\src\\\\components\\\\MainPageComponents\\\\ImageText\\\\ImageText.tsx\";\nimport React from 'react';\nimport './ImageText.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ImageTextComponent = ({\n  imageUrl,\n  text,\n  heading,\n  textPosition\n}) => {\n  const isTextLeft = textPosition === 'left';\n  const imageContainer = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image-container\",\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imageUrl,\n      alt: \"Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n  const textContainer = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: heading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: isTextLeft ? 'left' : 'right'\n      },\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `image-text-wrapper ${isTextLeft ? 'left' : 'right'}`,\n    children: isTextLeft ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [textContainer, imageContainer]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [imageContainer, textContainer]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_c = ImageTextComponent;\nexport default ImageTextComponent;\nvar _c;\n$RefreshReg$(_c, \"ImageTextComponent\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","ImageTextComponent","imageUrl","text","heading","textPosition","isTextLeft","imageContainer","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","textContainer","style","textAlign","_c","$RefreshReg$"],"sources":["C:/Users/peter/OneDrive/idk/Dokumenty/Multimedia/src/components/MainPageComponents/ImageText/ImageText.tsx"],"sourcesContent":["import React from 'react';\r\nimport './ImageText.scss';\r\n\r\ninterface ImageTextComponentProps {\r\n    imageUrl: string;\r\n    text: string;\r\n    heading: string;\r\n    textPosition: string;\r\n}\r\n\r\nconst ImageTextComponent: React.FC<ImageTextComponentProps> = ({ imageUrl, text, heading, textPosition }) => {\r\n    const isTextLeft = textPosition === 'left';\r\n\r\n    const imageContainer = (\r\n        <div className=\"image-container\">\r\n            <img src={imageUrl} alt=\"Image\" />\r\n        </div>\r\n    );\r\n\r\n    const textContainer = (\r\n        <div className=\"text-container\">\r\n            <h2>{heading}</h2>\r\n            <p style={{ textAlign: isTextLeft ? 'left' : 'right' }}>{text}</p>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className={`image-text-wrapper ${isTextLeft ? 'left' : 'right'}`}>\r\n            {isTextLeft ? (\r\n                <>\r\n                    {textContainer}\r\n                    {imageContainer}\r\n                </>\r\n            ) : (\r\n                <>\r\n                    {imageContainer}\r\n                    {textContainer}\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ImageTextComponent;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAS1B,MAAMC,kBAAqD,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,IAAI;EAAEC,OAAO;EAAEC;AAAa,CAAC,KAAK;EACzG,MAAMC,UAAU,GAAGD,YAAY,KAAK,MAAM;EAE1C,MAAME,cAAc,gBAChBT,OAAA;IAAKU,SAAS,EAAC,iBAAiB;IAAAC,QAAA,eAC5BX,OAAA;MAAKY,GAAG,EAAER,QAAS;MAACS,GAAG,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CACR;EAED,MAAMC,aAAa,gBACflB,OAAA;IAAKU,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC3BX,OAAA;MAAAW,QAAA,EAAKL;IAAO;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAClBjB,OAAA;MAAGmB,KAAK,EAAE;QAAEC,SAAS,EAAEZ,UAAU,GAAG,MAAM,GAAG;MAAQ,CAAE;MAAAG,QAAA,EAAEN;IAAI;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjE,CACR;EAED,oBACIjB,OAAA;IAAKU,SAAS,EAAG,sBAAqBF,UAAU,GAAG,MAAM,GAAG,OAAQ,EAAE;IAAAG,QAAA,EACjEH,UAAU,gBACPR,OAAA,CAAAE,SAAA;MAAAS,QAAA,GACKO,aAAa,EACbT,cAAc;IAAA,eACjB,CAAC,gBAEHT,OAAA,CAAAE,SAAA;MAAAS,QAAA,GACKF,cAAc,EACdS,aAAa;IAAA,eAChB;EACL;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACI,EAAA,GA/BIlB,kBAAqD;AAiC3D,eAAeA,kBAAkB;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}