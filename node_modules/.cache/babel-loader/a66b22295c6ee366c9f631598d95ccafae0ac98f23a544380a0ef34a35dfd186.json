{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\peter\\\\OneDrive\\\\idk\\\\Dokumenty\\\\Multimedia\\\\src\\\\components\\\\MainPageComponents\\\\ImageText\\\\ImageText.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageTextComponent = ({\n  imageUrl,\n  text,\n  textPosition\n}) => {\n  _s();\n  const [isTextLeft, setIsTextLeft] = React.useState(true);\n  React.useEffect(() => {\n    if (textPosition === 'left') {\n      setIsTextLeft(true);\n    } else {\n      setIsTextLeft(false);\n    }\n  }, [textPosition]);\n  const imageContainer = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image-container\",\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imageUrl,\n      alt: \"Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n  const textContainer = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-container\",\n    children: isTextLeft ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: 'right'\n      },\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image-text-wrapper\",\n    children: [imageContainer, textContainer]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(ImageTextComponent, \"HiArbVMCASkJg6eIFN1vcaVdK8U=\");\n_c = ImageTextComponent;\nexport default ImageTextComponent;\nvar _c;\n$RefreshReg$(_c, \"ImageTextComponent\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ImageTextComponent","imageUrl","text","textPosition","_s","isTextLeft","setIsTextLeft","useState","useEffect","imageContainer","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","textContainer","style","textAlign","_c","$RefreshReg$"],"sources":["C:/Users/peter/OneDrive/idk/Dokumenty/Multimedia/src/components/MainPageComponents/ImageText/ImageText.tsx"],"sourcesContent":["import React from 'react';\r\n\r\ninterface ImageTextComponentProps {\r\n    imageUrl: string;\r\n    text: string;\r\n    textPosition: string;\r\n}\r\n\r\nconst ImageTextComponent: React.FC<ImageTextComponentProps> = ({ imageUrl, text, textPosition }) => {\r\n    const [isTextLeft, setIsTextLeft] = React.useState(true);\r\n\r\n    React.useEffect(() => {\r\n        if (textPosition === 'left') {\r\n            setIsTextLeft(true);\r\n        } else {\r\n            setIsTextLeft(false);\r\n        }\r\n    }, [textPosition]);\r\n\r\n    const imageContainer = (\r\n        <div className=\"image-container\">\r\n            <img src={imageUrl} alt=\"Image\" />\r\n        </div>\r\n    );\r\n\r\n    const textContainer = (\r\n        <div className=\"text-container\">\r\n            {isTextLeft ? (\r\n                <p>{text}</p>\r\n            ) : (\r\n                <p style={{ textAlign: 'right' }}>{text}</p>\r\n            )}\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"image-text-wrapper\">\r\n            {imageContainer}\r\n            {textContainer}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ImageTextComponent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQ1B,MAAMC,kBAAqD,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,IAAI;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EAChG,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,KAAK,CAACU,QAAQ,CAAC,IAAI,CAAC;EAExDV,KAAK,CAACW,SAAS,CAAC,MAAM;IAClB,IAAIL,YAAY,KAAK,MAAM,EAAE;MACzBG,aAAa,CAAC,IAAI,CAAC;IACvB,CAAC,MAAM;MACHA,aAAa,CAAC,KAAK,CAAC;IACxB;EACJ,CAAC,EAAE,CAACH,YAAY,CAAC,CAAC;EAElB,MAAMM,cAAc,gBAChBV,OAAA;IAAKW,SAAS,EAAC,iBAAiB;IAAAC,QAAA,eAC5BZ,OAAA;MAAKa,GAAG,EAAEX,QAAS;MAACY,GAAG,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CACR;EAED,MAAMC,aAAa,gBACfnB,OAAA;IAAKW,SAAS,EAAC,gBAAgB;IAAAC,QAAA,EAC1BN,UAAU,gBACPN,OAAA;MAAAY,QAAA,EAAIT;IAAI;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,gBAEblB,OAAA;MAAGoB,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAQ,CAAE;MAAAT,QAAA,EAAET;IAAI;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAC9C;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CACR;EAED,oBACIlB,OAAA;IAAKW,SAAS,EAAC,oBAAoB;IAAAC,QAAA,GAC9BF,cAAc,EACdS,aAAa;EAAA;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACb,CAAC;AAEd,CAAC;AAACb,EAAA,CAjCIJ,kBAAqD;AAAAqB,EAAA,GAArDrB,kBAAqD;AAmC3D,eAAeA,kBAAkB;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}