{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\peter\\\\OneDrive\\\\idk\\\\Dokumenty\\\\Multimedia\\\\src\\\\components\\\\MainPageComponents\\\\Second\\\\PopUpContent\\\\PopUpContent.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './PopUpContent.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PopUpContent = () => {\n  _s();\n  const [currentSlide, setCurrentSlide] = useState(0);\n  // Additional state to handle interactive elements\n  const [selectedOption, setSelectedOption] = useState(null);\n  const theorySlides = [{\n    type: \"Theory\",\n    title: \"Introduction to Video Editing Software\",\n    content: \"Learn about different types of video editing software, their interfaces, and key features.\"\n  }, {\n    type: \"Theory\",\n    title: \"Basic Editing Techniques\",\n    content: \"Explore the fundamentals of cutting, trimming, and sequencing clips to tell a story.\"\n  }, {\n    type: \"Theory\",\n    title: \"Sound Design Basics\",\n    content: \"Understand the importance of sound, how to add soundtracks, and balance audio in your edits.\"\n  }, {\n    type: \"Theory\",\n    title: \"Color Correction Techniques\",\n    content: \"Discover how to enhance your video's look with color correction and grading.\"\n  }\n  // Add more theory slides as needed\n  ];\n\n  const practicalSlides = [{\n    type: \"Practical\",\n    title: \"Identify the Tools\",\n    content: \"Match video editing tools with their functions.\",\n    exercise: {\n      type: \"match\",\n      items: [{\n        tool: \"Razor\",\n        function: \"Cutting clips\"\n      }, {\n        tool: \"Hand\",\n        function: \"Navigating the timeline\"\n      }\n      // ... other tool-function pairs\n      ]\n    }\n  }, {\n    type: \"Practical\",\n    title: \"Order the Steps\",\n    content: \"Arrange the steps of a basic editing workflow in the correct sequence.\",\n    exercise: {\n      type: \"ordering\",\n      steps: [\"Import footage\", \"Cut and trim clips\", \"Add transitions\", \"Export final video\"]\n    }\n  }, {\n    type: \"Practical\",\n    title: \"Sound Balancing Quiz\",\n    content: \"Choose the correct approach to balance different audio elements in a scene.\",\n    exercise: {\n      type: \"quiz\",\n      question: \"How would you balance dialogue and background music?\",\n      options: [\"Keep both at same level\", \"Dialogue louder than music\", \"Music louder than dialogue\"],\n      correctAnswer: \"Dialogue louder than music\"\n    }\n  }\n  // Add more practical slides as needed\n  ];\n\n  const conclusionSlide = {\n    type: \"Conclusion\",\n    title: \"Summary of Key Concepts\",\n    content: \"This is a summary of the key points covered in the course.\"\n  };\n  const slides = [...theorySlides, ...practicalSlides, conclusionSlide];\n\n  // Handle selecting an option in a quiz\n  const handleOptionSelect = option => {\n    setSelectedOption(option);\n  };\n  const goToNextSlide = () => {\n    setCurrentSlide(currentSlide + 1);\n    setSelectedOption(null); // Reset for the next slide\n  };\n\n  const goToPreviousSlide = () => {\n    setCurrentSlide(currentSlide - 1);\n    setSelectedOption(null); // Reset for the next slide\n  };\n\n  const renderSlideContent = () => {\n    var _slide$exercise;\n    const slide = slides[currentSlide];\n    const isQuiz = slide.type === 'Practical' && ((_slide$exercise = slide.exercise) === null || _slide$exercise === void 0 ? void 0 : _slide$exercise.type) === 'quiz';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: slide.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), isQuiz && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [slide.exercise.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleOptionSelect(option),\n          children: option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 29\n        }, this)), selectedOption && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: selectedOption === slide.exercise.correctAnswer ? 'Correct!' : 'Incorrect'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 44\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popup-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: slides[currentSlide].title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this), renderSlideContent(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navigation-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: goToPreviousSlide,\n        disabled: currentSlide === 0,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: goToNextSlide,\n        disabled: currentSlide === slides.length - 1,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 9\n  }, this);\n};\n_s(PopUpContent, \"h9K25Yj9PtQXogFMfYxiDKhRMfE=\");\n_c = PopUpContent;\nexport default PopUpContent;\nvar _c;\n$RefreshReg$(_c, \"PopUpContent\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PopUpContent","_s","currentSlide","setCurrentSlide","selectedOption","setSelectedOption","theorySlides","type","title","content","practicalSlides","exercise","items","tool","function","steps","question","options","correctAnswer","conclusionSlide","slides","handleOptionSelect","option","goToNextSlide","goToPreviousSlide","renderSlideContent","_slide$exercise","slide","isQuiz","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","className","disabled","length","_c","$RefreshReg$"],"sources":["C:/Users/peter/OneDrive/idk/Dokumenty/Multimedia/src/components/MainPageComponents/Second/PopUpContent/PopUpContent.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './PopUpContent.scss';\r\n\r\ninterface TheorySlide {\r\n    type: \"Theory\";\r\n    title: string;\r\n    content: string;\r\n}\r\n\r\ninterface PracticalSlide {\r\n    type: \"Practical\";\r\n    title: string;\r\n    content: string;\r\n    exercise: {\r\n        type: string;\r\n        options: string[];\r\n        correctAnswer: string;\r\n    };\r\n}\r\n\r\ninterface ConclusionSlide {\r\n    type: \"Conclusion\";\r\n    title: string;\r\n    content: string;\r\n}\r\n\r\ntype Slide = TheorySlide | PracticalSlide | ConclusionSlide;\r\n\r\n\r\nconst PopUpContent = () => {\r\n    const [currentSlide, setCurrentSlide] = useState(0);\r\n    // Additional state to handle interactive elements\r\n    const [selectedOption, setSelectedOption] = useState(null);\r\n\r\n    const theorySlides = [\r\n        {\r\n            type: \"Theory\",\r\n            title: \"Introduction to Video Editing Software\",\r\n            content: \"Learn about different types of video editing software, their interfaces, and key features.\"\r\n        },\r\n        {\r\n            type: \"Theory\",\r\n            title: \"Basic Editing Techniques\",\r\n            content: \"Explore the fundamentals of cutting, trimming, and sequencing clips to tell a story.\"\r\n        },\r\n        {\r\n            type: \"Theory\",\r\n            title: \"Sound Design Basics\",\r\n            content: \"Understand the importance of sound, how to add soundtracks, and balance audio in your edits.\"\r\n        },\r\n        {\r\n            type: \"Theory\",\r\n            title: \"Color Correction Techniques\",\r\n            content: \"Discover how to enhance your video's look with color correction and grading.\"\r\n        },\r\n        // Add more theory slides as needed\r\n    ];\r\n\r\n\r\n    const practicalSlides = [\r\n        {\r\n            type: \"Practical\",\r\n            title: \"Identify the Tools\",\r\n            content: \"Match video editing tools with their functions.\",\r\n            exercise: {\r\n                type: \"match\",\r\n                items: [\r\n                    { tool: \"Razor\", function: \"Cutting clips\" },\r\n                    { tool: \"Hand\", function: \"Navigating the timeline\" },\r\n                    // ... other tool-function pairs\r\n                ]\r\n            }\r\n        },\r\n        {\r\n            type: \"Practical\",\r\n            title: \"Order the Steps\",\r\n            content: \"Arrange the steps of a basic editing workflow in the correct sequence.\",\r\n            exercise: {\r\n                type: \"ordering\",\r\n                steps: [\"Import footage\", \"Cut and trim clips\", \"Add transitions\", \"Export final video\"]\r\n            }\r\n        },\r\n        {\r\n            type: \"Practical\",\r\n            title: \"Sound Balancing Quiz\",\r\n            content: \"Choose the correct approach to balance different audio elements in a scene.\",\r\n            exercise: {\r\n                type: \"quiz\",\r\n                question: \"How would you balance dialogue and background music?\",\r\n                options: [\"Keep both at same level\", \"Dialogue louder than music\", \"Music louder than dialogue\"],\r\n                correctAnswer: \"Dialogue louder than music\"\r\n            }\r\n        },\r\n        // Add more practical slides as needed\r\n    ];\r\n\r\n\r\n    const conclusionSlide = {\r\n        type: \"Conclusion\",\r\n        title: \"Summary of Key Concepts\",\r\n        content: \"This is a summary of the key points covered in the course.\"\r\n    };\r\n\r\n    const slides = [...theorySlides, ...practicalSlides, conclusionSlide];\r\n\r\n    // Handle selecting an option in a quiz\r\n    const handleOptionSelect = (option) => {\r\n        setSelectedOption(option);\r\n    };\r\n\r\n    const goToNextSlide = () => {\r\n        setCurrentSlide(currentSlide + 1);\r\n        setSelectedOption(null); // Reset for the next slide\r\n    };\r\n\r\n    const goToPreviousSlide = () => {\r\n        setCurrentSlide(currentSlide - 1);\r\n        setSelectedOption(null); // Reset for the next slide\r\n    };\r\n\r\n    const renderSlideContent = () => {\r\n        const slide = slides[currentSlide];\r\n        const isQuiz = slide.type === 'Practical' && slide.exercise?.type === 'quiz';\r\n\r\n        return (\r\n            <div>\r\n                <p>{slide.content}</p>\r\n                {isQuiz && (\r\n                    <div>\r\n                        {slide.exercise.options.map((option, index) => (\r\n                            <button key={index} onClick={() => handleOptionSelect(option)}>\r\n                                {option}\r\n                            </button>\r\n                        ))}\r\n                        {selectedOption && <p>{selectedOption === slide.exercise.correctAnswer ? 'Correct!' : 'Incorrect'}</p>}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"popup-content\">\r\n            <h2>{slides[currentSlide].title}</h2>\r\n            {renderSlideContent()}\r\n            <div className=\"navigation-buttons\">\r\n                <button onClick={goToPreviousSlide} disabled={currentSlide === 0}>Previous</button>\r\n                <button onClick={goToNextSlide} disabled={currentSlide === slides.length - 1}>Next</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PopUpContent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}